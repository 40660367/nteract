import { SVGWrapper } from "@nteract/octicons";
import {
  XYFrame,
  OrdinalFrame,
  ResponsiveOrdinalFrame,
  ResponsiveXYFrame,
  ResponsiveNetworkFrame
} from "semiotic";

export const BoxplotOcticon = (props: any) => (
  <SVGWrapper width={16} height={16} viewBox="0 0 16 16" outerProps={props}>
    <title>Create Text Cell</title>
    <path
      fill="lightgray"
      stroke="black"
      d="M 10.435981,13.151298 15.111069,13.151298 M 1.1428631,15.896985 5.8179514,15.896985 M 3.5917189,0.5359811 3.5917189,15.896985 M 1.1428631,0.5359811 5.8179514,0.5359811 M 12.884836,1.4264741 12.884836,13.225506 M 10.435981,1.4264741 15.111069,1.4264741 M 10.501002,3.8652931 15.207344,3.8652931 15.207344,10.354234 10.501002,10.354234 Z M 1.0594686,5.4856235 5.7658105,5.4856235 5.7658105,13.458719 1.0594686,13.458719 Z"
    />
  </SVGWrapper>
);

export const TreeOcticon = (props: any) => (
  <SVGWrapper width={16} height={16} viewBox="0 0 16 16" outerProps={props}>
    <title>Create Text Cell</title>
    <path
      fill="lightgray"
      stroke="black"
      d="M 5.3462352,16.86934 5.3462352,11.568531 M 5.0378073,11.186463 10.665375,16.453304 M 5.5794816,11.049276 -0.04808655,16.316116 M 10.903757,11.840357 10.903757,6.5395482 M 10.722225,5.9958343 16.349791,11.262675 M 10.758529,6.1997119 5.1309613,11.466552 M 5.3851096,6.1997401 5.3851096,0.06818774 M 5.3488028,0.96685111 10.976372,6.2336914 M 5.3851095,0.89889187 -0.24245868,6.1657322"
    />
  </SVGWrapper>
);

export const NetworkOcticon = (props: any) => (
  <SVGWrapper width={16} height={16} viewBox="0 0 16 16" outerProps={props}>
    <title>Create Text Cell</title>
    <path
      fill="lightgray"
      stroke="black"
      d="M 12.466705,3.9653755 9.3500287,6.8831149 M 3.6471743,3.8990633 6.4322892,6.5515537 M 3.9124233,12.254408 6.631226,9.8008545 M 12.400392,12.387032 9.1510919,9.66823 M 0.38634229,13.658094 A 2.0715685,2.0715685 0 0 0 2.4579108,15.729663 2.0715685,2.0715685 0 0 0 4.5294793,13.658094 2.0715685,2.0715685 0 0 0 2.4579108,11.586526 2.0715685,2.0715685 0 0 0 0.38634229,13.658094 Z M 11.650713,2.4953768 A 2.0715685,2.0715685 0 0 0 13.722281,4.5669453 2.0715685,2.0715685 0 0 0 15.79385,2.4953768 2.0715685,2.0715685 0 0 0 13.722281,0.42380834 2.0715685,2.0715685 0 0 0 11.650713,2.4953768 Z M 15.79385,13.658094 A 2.0715685,2.0715685 0 0 1 13.722281,15.729663 2.0715685,2.0715685 0 0 1 11.650713,13.658094 2.0715685,2.0715685 0 0 1 13.722281,11.586526 2.0715685,2.0715685 0 0 1 15.79385,13.658094 Z M 10.044526,8.1887112 A 2.0715685,2.0715685 0 0 1 7.9729571,10.26028 2.0715685,2.0715685 0 0 1 5.9013886,8.1887112 2.0715685,2.0715685 0 0 1 7.9729571,6.1171427 2.0715685,2.0715685 0 0 1 10.044526,8.1887112 Z M 4.5294793,2.4953768 A 2.0715685,2.0715685 0 0 1 2.4579108,4.5669453 2.0715685,2.0715685 0 0 1 0.38634229,2.4953768 2.0715685,2.0715685 0 0 1 2.4579108,0.42380834 2.0715685,2.0715685 0 0 1 4.5294793,2.4953768 Z"
    />
  </SVGWrapper>
);

export const ScatterplotOcticon = (props: any) => (
  <SVGWrapper width={16} height={16} viewBox="0 0 16 16" outerProps={props}>
    <title>Create Text Cell</title>
    <path
      fill="lightgray"
      stroke="black"
      d="M 6.2333524,7.1483631 A 2.1883047,2.1883047 0 0 1 4.0450478,9.3366678 2.1883047,2.1883047 0 0 1 1.8567431,7.1483631 2.1883047,2.1883047 0 0 1 4.0450478,4.9600585 2.1883047,2.1883047 0 0 1 6.2333524,7.1483631 Z M 12.201456,4.0316868 A 2.1883047,2.1883047 0 0 1 10.013151,6.2199914 2.1883047,2.1883047 0 0 1 7.8248465,4.0316868 2.1883047,2.1883047 0 0 1 10.013151,1.8433821 2.1883047,2.1883047 0 0 1 12.201456,4.0316868 Z M 14.787634,11.45866 A 2.1883047,2.1883047 0 0 1 12.599329,13.646965 2.1883047,2.1883047 0 0 1 10.411024,11.45866 2.1883047,2.1883047 0 0 1 12.599329,9.2703555 2.1883047,2.1883047 0 0 1 14.787634,11.45866 Z M 0.06631226,-0.01336003 0.06631226,16.100519 16.113879,16.100519"
    />
  </SVGWrapper>
);
