// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Notebook accepts an Immutable.List of cells 1`] = `
<Provider
  delay={0}
  didFinishTypeset={null}
  input="tex"
  loading={null}
  noGate={false}
  onError={[Function]}
  onLoad={null}
  options={Object {}}
  src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML"
>
  <div
    className="notebook-preview"
  >
    <Cells>
      <Cell
        _hovered={false}
        isSelected={false}
        key="2"
      >
        <styled.div>
          <MarkdownRender
            source="## The Notable Nteract Notebook

**It's a notebook!**
"
          />
        </styled.div>
      </Cell>
      <Cell
        _hovered={false}
        isSelected={false}
        key="3"
      >
        <Styled(PlainPapermillView)
          status={null}
        />
        <Input>
          <Prompt
            blank={false}
            counter={11}
            queued={false}
            running={false}
          />
          <Source
            className="input"
            language="ipython"
            theme="light"
          >
            import IPython

from IPython.display import HTML
from IPython.display import Markdown
from IPython.display import display

display(HTML('&lt;h1&gt;Multiple&lt;/h1&gt;'))
display(HTML('&lt;p&gt;Display Elements&lt;/p&gt;'))
display(Markdown('**awesome**'))

print('hey')
42
          </Source>
        </Input>
        <Outputs
          expanded={true}
          hidden={false}
        >
          <Output
            key="0"
            output={
              Object {
                "data": Object {
                  "text/plain": "<IPython.core.display.HTML object>",
                },
                "metadata": Object {},
                "output_type": "display_data",
              }
            }
          >
            <Component
              data={Object {}}
              metadata={Object {}}
              output_type="display_data"
            >
              <HTML
                data=""
                mediaType="text/html"
              />
              <Image
                data=""
                mediaType="image/jpeg"
              />
              <Json
                data={null}
                mediaType="application/json"
                metadata={
                  Object {
                    "expanded": true,
                  }
                }
                theme="light"
              />
              <JavaScript
                data=""
                mediaType="application/javascript"
              />
              <LaTeX
                data=""
                mediaType="text/latex"
              />
              <Markdown
                data=""
                mediaType="text/markdown"
              />
              <Plaintext
                data=""
                mediaType="text/plain"
              />
              <SVG
                data=""
                mediaType="image/svg+xml"
              />
            </Component>
            <Component
              data={Object {}}
              metadata={Object {}}
              output_type="execute_result"
            >
              <HTML
                data=""
                mediaType="text/html"
              />
              <Image
                data=""
                mediaType="image/jpeg"
              />
              <Json
                data={null}
                mediaType="application/json"
                metadata={
                  Object {
                    "expanded": true,
                  }
                }
                theme="light"
              />
              <JavaScript
                data=""
                mediaType="application/javascript"
              />
              <LaTeX
                data=""
                mediaType="text/latex"
              />
              <Markdown
                data=""
                mediaType="text/markdown"
              />
              <Plaintext
                data=""
                mediaType="text/plain"
              />
              <SVG
                data=""
                mediaType="image/svg+xml"
              />
            </Component>
            <KernelOutputError
              ename=""
              evalue=""
              output_type="error"
              traceback={Array []}
            />
            <Component
              name="stdout"
              output_type="stream"
              text=""
            />
          </Output>
        </Outputs>
      </Cell>
    </Cells>
    <GlobalStyleComponent />
  </div>
</Provider>
`;

exports[`Notebook accepts an Object of cells 1`] = `
<Provider
  delay={0}
  didFinishTypeset={null}
  input="tex"
  loading={null}
  noGate={false}
  onError={[Function]}
  onLoad={null}
  options={Object {}}
  src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML"
>
  <div
    className="notebook-preview"
  >
    <Cells>
      <Cell
        _hovered={false}
        isSelected={false}
        key="14"
      >
        <styled.div>
          <MarkdownRender
            source="## The Notable Nteract Notebook

**It's a notebook!**
"
          />
        </styled.div>
      </Cell>
      <Cell
        _hovered={false}
        isSelected={false}
        key="15"
      >
        <Styled(PlainPapermillView)
          status={null}
        />
        <Input>
          <Prompt
            blank={false}
            counter={11}
            queued={false}
            running={false}
          />
          <Source
            className="input"
            language="ipython"
            theme="light"
          >
            import IPython

from IPython.display import HTML
from IPython.display import Markdown
from IPython.display import display

display(HTML('&lt;h1&gt;Multiple&lt;/h1&gt;'))
display(HTML('&lt;p&gt;Display Elements&lt;/p&gt;'))
display(Markdown('**awesome**'))

print('hey')
42
          </Source>
        </Input>
        <Outputs
          expanded={true}
          hidden={false}
        >
          <Output
            key="0"
            output={
              Object {
                "data": Object {
                  "text/plain": "<IPython.core.display.HTML object>",
                },
                "metadata": Object {},
                "output_type": "display_data",
              }
            }
          >
            <Component
              data={Object {}}
              metadata={Object {}}
              output_type="display_data"
            >
              <HTML
                data=""
                mediaType="text/html"
              />
              <Image
                data=""
                mediaType="image/jpeg"
              />
              <Json
                data={null}
                mediaType="application/json"
                metadata={
                  Object {
                    "expanded": true,
                  }
                }
                theme="light"
              />
              <JavaScript
                data=""
                mediaType="application/javascript"
              />
              <LaTeX
                data=""
                mediaType="text/latex"
              />
              <Markdown
                data=""
                mediaType="text/markdown"
              />
              <Plaintext
                data=""
                mediaType="text/plain"
              />
              <SVG
                data=""
                mediaType="image/svg+xml"
              />
            </Component>
            <Component
              data={Object {}}
              metadata={Object {}}
              output_type="execute_result"
            >
              <HTML
                data=""
                mediaType="text/html"
              />
              <Image
                data=""
                mediaType="image/jpeg"
              />
              <Json
                data={null}
                mediaType="application/json"
                metadata={
                  Object {
                    "expanded": true,
                  }
                }
                theme="light"
              />
              <JavaScript
                data=""
                mediaType="application/javascript"
              />
              <LaTeX
                data=""
                mediaType="text/latex"
              />
              <Markdown
                data=""
                mediaType="text/markdown"
              />
              <Plaintext
                data=""
                mediaType="text/plain"
              />
              <SVG
                data=""
                mediaType="image/svg+xml"
              />
            </Component>
            <KernelOutputError
              ename=""
              evalue=""
              output_type="error"
              traceback={Array []}
            />
            <Component
              name="stdout"
              output_type="stream"
              text=""
            />
          </Output>
        </Outputs>
      </Cell>
    </Cells>
    <GlobalStyleComponent />
  </div>
</Provider>
`;
