// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test NotebokRender snapshots accepts an Immutable.List of cells 1`] = `
<div
  className="notebook-render"
>
  <Cells>
    <Cell
      _hovered={false}
      isSelected={false}
      key="2"
    >
      <styled.div>
        <ReactMarkdown
          astPlugins={Array []}
          escapeHtml={false}
          plugins={
            Array [
              [Function],
              [Function],
              [Function],
              [Function],
            ]
          }
          rawSourcePos={false}
          renderers={
            Object {
              "inlineMath": [Function],
              "math": [Function],
            }
          }
          skipHtml={false}
          source="## The Notable Nteract Notebook

**It's a notebook!**
"
          sourcePos={false}
          transformLinkUri={[Function]}
        />
      </styled.div>
    </Cell>
    <Cell
      _hovered={false}
      isSelected={false}
      key="3"
    >
      <Input>
        <Prompt
          blank={false}
          counter={11}
          queued={false}
          running={false}
        />
        <Source
          className="input"
          language="ipython"
          theme="light"
        >
          import IPython

from IPython.display import HTML
from IPython.display import Markdown
from IPython.display import display

display(HTML('&lt;h1&gt;Multiple&lt;/h1&gt;'))
display(HTML('&lt;p&gt;Display Elements&lt;/p&gt;'))
display(Markdown('**awesome**'))

print('hey')
42
        </Source>
      </Input>
      <Outputs
        expanded={true}
        hidden={false}
      >
        <Display
          displayOrder={
            Array [
              "application/vdom.v1+json",
              "application/json",
              "application/javascript",
              "text/html",
              "text/markdown",
              "text/latex",
              "image/svg+xml",
              "image/gif",
              "image/png",
              "image/jpeg",
              "text/plain",
            ]
          }
          expanded={false}
          isHidden={false}
          models={Immutable.Map {}}
          outputs={
            Array [
              Object {
                "data": Object {
                  "text/plain": "<IPython.core.display.HTML object>",
                },
                "metadata": Object {},
                "output_type": "display_data",
              },
            ]
          }
          theme="light"
          transforms={
            Array [
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            ]
          }
        />
      </Outputs>
    </Cell>
  </Cells>
  <GlobalStyleComponent />
</div>
`;

exports[`Test NotebokRender snapshots accepts an Object of cells 1`] = `
<div
  className="notebook-render"
>
  <Cells>
    <Cell
      _hovered={false}
      isSelected={false}
      key="14"
    >
      <styled.div>
        <ReactMarkdown
          astPlugins={Array []}
          escapeHtml={false}
          plugins={
            Array [
              [Function],
              [Function],
              [Function],
              [Function],
            ]
          }
          rawSourcePos={false}
          renderers={
            Object {
              "inlineMath": [Function],
              "math": [Function],
            }
          }
          skipHtml={false}
          source="## The Notable Nteract Notebook

**It's a notebook!**
"
          sourcePos={false}
          transformLinkUri={[Function]}
        />
      </styled.div>
    </Cell>
    <Cell
      _hovered={false}
      isSelected={false}
      key="15"
    >
      <Input>
        <Prompt
          blank={false}
          counter={11}
          queued={false}
          running={false}
        />
        <Source
          className="input"
          language="ipython"
          theme="light"
        >
          import IPython

from IPython.display import HTML
from IPython.display import Markdown
from IPython.display import display

display(HTML('&lt;h1&gt;Multiple&lt;/h1&gt;'))
display(HTML('&lt;p&gt;Display Elements&lt;/p&gt;'))
display(Markdown('**awesome**'))

print('hey')
42
        </Source>
      </Input>
      <Outputs
        expanded={true}
        hidden={false}
      >
        <Display
          displayOrder={
            Array [
              "application/vdom.v1+json",
              "application/json",
              "application/javascript",
              "text/html",
              "text/markdown",
              "text/latex",
              "image/svg+xml",
              "image/gif",
              "image/png",
              "image/jpeg",
              "text/plain",
            ]
          }
          expanded={false}
          isHidden={false}
          models={Immutable.Map {}}
          outputs={
            Array [
              Object {
                "data": Object {
                  "text/plain": "<IPython.core.display.HTML object>",
                },
                "metadata": Object {},
                "output_type": "display_data",
              },
            ]
          }
          theme="light"
          transforms={
            Array [
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            ]
          }
        />
      </Outputs>
    </Cell>
  </Cells>
  <GlobalStyleComponent />
</div>
`;
